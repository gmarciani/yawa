openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8002
  description: Generated server url
paths:
  /Logout:
    post:
      tags:
      - logout
      operationId: action
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Response'
  /Login:
    post:
      tags:
      - login
      operationId: action_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Response'
  /CreateUsers:
    post:
      tags:
      - create-users
      operationId: action_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Response'
  /UpdateUsers:
    patch:
      tags:
      - update-users
      operationId: action_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Response'
  /ListUsers:
    get:
      tags:
      - list-users
      operationId: action_4
      parameters:
      - name: request
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Request'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Response'
  /GetRandomOutcome:
    get:
      tags:
      - get-random-outcome
      operationId: action_5
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Response'
  /GetAuthenticatedHello:
    get:
      tags:
      - get-authenticated-hello
      operationId: action_6
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Response'
  /DescribeUsers:
    get:
      tags:
      - describe-users
      operationId: action_7
      parameters:
      - name: request
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Request'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Response'
  /DeleteUsers:
    delete:
      tags:
      - delete-users
      operationId: action_8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Response'
components:
  schemas:
    Response:
      type: object
      properties:
        message:
          type: string
    Request:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
